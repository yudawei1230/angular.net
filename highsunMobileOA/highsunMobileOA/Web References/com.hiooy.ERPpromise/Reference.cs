//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
// 
#pragma warning disable 1591

namespace highsunMobileOA.com.hiooy.ERPpromise {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_ERPPromiseCostAnalysisSoap", Namespace="http://dsp.hiooy.com:8200/WebServices")]
    public partial class WS_ERPPromiseCostAnalysis : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ERPCOSTComConCompleteReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPCOSTComPrjConCompleteReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPCOSTComConExecReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPCOSTPrjConExecReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPCOSTAllPrjConExecReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPCOSTAIM2DynCostOperationCompleted;
        
        private System.Threading.SendOrPostCallback ERPTOTALCost2TotalDynCostOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_ERPPromiseCostAnalysis() {
            this.Url = global::highsunMobileOA.Properties.Settings.Default.highsunMobileOA_com_hiooy_ERPpromise_WS_ERPPromiseCostAnalysis;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ERPCOSTComConCompleteReportCompletedEventHandler ERPCOSTComConCompleteReportCompleted;
        
        /// <remarks/>
        public event ERPCOSTComPrjConCompleteReportCompletedEventHandler ERPCOSTComPrjConCompleteReportCompleted;
        
        /// <remarks/>
        public event ERPCOSTComConExecReportCompletedEventHandler ERPCOSTComConExecReportCompleted;
        
        /// <remarks/>
        public event ERPCOSTPrjConExecReportCompletedEventHandler ERPCOSTPrjConExecReportCompleted;
        
        /// <remarks/>
        public event ERPCOSTAllPrjConExecReportCompletedEventHandler ERPCOSTAllPrjConExecReportCompleted;
        
        /// <remarks/>
        public event ERPCOSTAIM2DynCostCompletedEventHandler ERPCOSTAIM2DynCostCompleted;
        
        /// <remarks/>
        public event ERPTOTALCost2TotalDynCostCompletedEventHandler ERPTOTALCost2TotalDynCostCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTComConCompleteReport", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTComConCompleteReport(string callKey) {
            object[] results = this.Invoke("ERPCOSTComConCompleteReport", new object[] {
                        callKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTComConCompleteReportAsync(string callKey) {
            this.ERPCOSTComConCompleteReportAsync(callKey, null);
        }
        
        /// <remarks/>
        public void ERPCOSTComConCompleteReportAsync(string callKey, object userState) {
            if ((this.ERPCOSTComConCompleteReportOperationCompleted == null)) {
                this.ERPCOSTComConCompleteReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTComConCompleteReportOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTComConCompleteReport", new object[] {
                        callKey}, this.ERPCOSTComConCompleteReportOperationCompleted, userState);
        }
        
        private void OnERPCOSTComConCompleteReportOperationCompleted(object arg) {
            if ((this.ERPCOSTComConCompleteReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTComConCompleteReportCompleted(this, new ERPCOSTComConCompleteReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTComPrjConCompleteReport", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTComPrjConCompleteReport(string callKey, string companyID) {
            object[] results = this.Invoke("ERPCOSTComPrjConCompleteReport", new object[] {
                        callKey,
                        companyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTComPrjConCompleteReportAsync(string callKey, string companyID) {
            this.ERPCOSTComPrjConCompleteReportAsync(callKey, companyID, null);
        }
        
        /// <remarks/>
        public void ERPCOSTComPrjConCompleteReportAsync(string callKey, string companyID, object userState) {
            if ((this.ERPCOSTComPrjConCompleteReportOperationCompleted == null)) {
                this.ERPCOSTComPrjConCompleteReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTComPrjConCompleteReportOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTComPrjConCompleteReport", new object[] {
                        callKey,
                        companyID}, this.ERPCOSTComPrjConCompleteReportOperationCompleted, userState);
        }
        
        private void OnERPCOSTComPrjConCompleteReportOperationCompleted(object arg) {
            if ((this.ERPCOSTComPrjConCompleteReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTComPrjConCompleteReportCompleted(this, new ERPCOSTComPrjConCompleteReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTComConExecReport", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTComConExecReport(string callKey, string companyID) {
            object[] results = this.Invoke("ERPCOSTComConExecReport", new object[] {
                        callKey,
                        companyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTComConExecReportAsync(string callKey, string companyID) {
            this.ERPCOSTComConExecReportAsync(callKey, companyID, null);
        }
        
        /// <remarks/>
        public void ERPCOSTComConExecReportAsync(string callKey, string companyID, object userState) {
            if ((this.ERPCOSTComConExecReportOperationCompleted == null)) {
                this.ERPCOSTComConExecReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTComConExecReportOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTComConExecReport", new object[] {
                        callKey,
                        companyID}, this.ERPCOSTComConExecReportOperationCompleted, userState);
        }
        
        private void OnERPCOSTComConExecReportOperationCompleted(object arg) {
            if ((this.ERPCOSTComConExecReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTComConExecReportCompleted(this, new ERPCOSTComConExecReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTPrjConExecReport", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTPrjConExecReport(string callKey, string companyID) {
            object[] results = this.Invoke("ERPCOSTPrjConExecReport", new object[] {
                        callKey,
                        companyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTPrjConExecReportAsync(string callKey, string companyID) {
            this.ERPCOSTPrjConExecReportAsync(callKey, companyID, null);
        }
        
        /// <remarks/>
        public void ERPCOSTPrjConExecReportAsync(string callKey, string companyID, object userState) {
            if ((this.ERPCOSTPrjConExecReportOperationCompleted == null)) {
                this.ERPCOSTPrjConExecReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTPrjConExecReportOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTPrjConExecReport", new object[] {
                        callKey,
                        companyID}, this.ERPCOSTPrjConExecReportOperationCompleted, userState);
        }
        
        private void OnERPCOSTPrjConExecReportOperationCompleted(object arg) {
            if ((this.ERPCOSTPrjConExecReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTPrjConExecReportCompleted(this, new ERPCOSTPrjConExecReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTAllPrjConExecReport", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTAllPrjConExecReport(string callKey) {
            object[] results = this.Invoke("ERPCOSTAllPrjConExecReport", new object[] {
                        callKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTAllPrjConExecReportAsync(string callKey) {
            this.ERPCOSTAllPrjConExecReportAsync(callKey, null);
        }
        
        /// <remarks/>
        public void ERPCOSTAllPrjConExecReportAsync(string callKey, object userState) {
            if ((this.ERPCOSTAllPrjConExecReportOperationCompleted == null)) {
                this.ERPCOSTAllPrjConExecReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTAllPrjConExecReportOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTAllPrjConExecReport", new object[] {
                        callKey}, this.ERPCOSTAllPrjConExecReportOperationCompleted, userState);
        }
        
        private void OnERPCOSTAllPrjConExecReportOperationCompleted(object arg) {
            if ((this.ERPCOSTAllPrjConExecReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTAllPrjConExecReportCompleted(this, new ERPCOSTAllPrjConExecReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPCOSTAIM2DynCost", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPCOSTAIM2DynCost(string callKey, string companyID) {
            object[] results = this.Invoke("ERPCOSTAIM2DynCost", new object[] {
                        callKey,
                        companyID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPCOSTAIM2DynCostAsync(string callKey, string companyID) {
            this.ERPCOSTAIM2DynCostAsync(callKey, companyID, null);
        }
        
        /// <remarks/>
        public void ERPCOSTAIM2DynCostAsync(string callKey, string companyID, object userState) {
            if ((this.ERPCOSTAIM2DynCostOperationCompleted == null)) {
                this.ERPCOSTAIM2DynCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPCOSTAIM2DynCostOperationCompleted);
            }
            this.InvokeAsync("ERPCOSTAIM2DynCost", new object[] {
                        callKey,
                        companyID}, this.ERPCOSTAIM2DynCostOperationCompleted, userState);
        }
        
        private void OnERPCOSTAIM2DynCostOperationCompleted(object arg) {
            if ((this.ERPCOSTAIM2DynCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPCOSTAIM2DynCostCompleted(this, new ERPCOSTAIM2DynCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dsp.hiooy.com:8200/WebServices/ERPTOTALCost2TotalDynCost", RequestNamespace="http://dsp.hiooy.com:8200/WebServices", ResponseNamespace="http://dsp.hiooy.com:8200/WebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ERPTOTALCost2TotalDynCost(string callKey) {
            object[] results = this.Invoke("ERPTOTALCost2TotalDynCost", new object[] {
                        callKey});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ERPTOTALCost2TotalDynCostAsync(string callKey) {
            this.ERPTOTALCost2TotalDynCostAsync(callKey, null);
        }
        
        /// <remarks/>
        public void ERPTOTALCost2TotalDynCostAsync(string callKey, object userState) {
            if ((this.ERPTOTALCost2TotalDynCostOperationCompleted == null)) {
                this.ERPTOTALCost2TotalDynCostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnERPTOTALCost2TotalDynCostOperationCompleted);
            }
            this.InvokeAsync("ERPTOTALCost2TotalDynCost", new object[] {
                        callKey}, this.ERPTOTALCost2TotalDynCostOperationCompleted, userState);
        }
        
        private void OnERPTOTALCost2TotalDynCostOperationCompleted(object arg) {
            if ((this.ERPTOTALCost2TotalDynCostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ERPTOTALCost2TotalDynCostCompleted(this, new ERPTOTALCost2TotalDynCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTComConCompleteReportCompletedEventHandler(object sender, ERPCOSTComConCompleteReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTComConCompleteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTComConCompleteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTComPrjConCompleteReportCompletedEventHandler(object sender, ERPCOSTComPrjConCompleteReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTComPrjConCompleteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTComPrjConCompleteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTComConExecReportCompletedEventHandler(object sender, ERPCOSTComConExecReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTComConExecReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTComConExecReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTPrjConExecReportCompletedEventHandler(object sender, ERPCOSTPrjConExecReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTPrjConExecReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTPrjConExecReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTAllPrjConExecReportCompletedEventHandler(object sender, ERPCOSTAllPrjConExecReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTAllPrjConExecReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTAllPrjConExecReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPCOSTAIM2DynCostCompletedEventHandler(object sender, ERPCOSTAIM2DynCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPCOSTAIM2DynCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPCOSTAIM2DynCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ERPTOTALCost2TotalDynCostCompletedEventHandler(object sender, ERPTOTALCost2TotalDynCostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ERPTOTALCost2TotalDynCostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ERPTOTALCost2TotalDynCostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591